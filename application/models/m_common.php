<?php class M_common extends CI_Model {    function __construct() {        // Call the Model constructor        parent::__construct();    }    function insert_entry($tbl, $arr, $flag = 1) {        $r = array('stat' => 0, 'last_id' => 0);        $r['stat'] = $this->db->insert($tbl, $arr);        if ($flag == 1 && $r['stat'] == 1) {            $r['last_id'] = $this->db->insert_id();        }        return $r;    }    function delete_entry($t, $w) {        return $this->db->delete($t, $w);    }    function update_entry($t, $i, $w) {        return $this->db->update($t, $i, $w);        //echo $this->db->last_query();exit;    }    function select_custom($q, $is_res = 0) {        $query = $this->db->query($q);        if ($is_res == 1) {            return $query;        } else {            return $query->result_array();        }    }    function get_user_info($id) {        $res = array();        $q = "select t1.user_id,t1.email,t1.dob,t1.sex,t1.profile_image,t1.location,t1.user_name,group_concat(t2.tag_id) as tag_id from dash_users t1 left join rf_usertags t2 on t1.user_id = t2.user_id where t1.user_id = $id";        $query = $this->db->query($q);        $r = $query->result_array();        if (!empty($r)) {            $res = $r[0];        }        return $res;    }    function query_custom($q) {        $this->db->query($q);    }    function tagging_fid($arr) {//get tagging id of my perticuler friends        $r = '';        $this->db->select("tags");        $this->db->from("rf_user_tagging");        $this->db->where($arr);        $temp = $this->db->get();        $t = $temp->row_array();        if (isset($t['tags'])) {            $r = $t['tags'];        }        return $r;    }    function taggingFrdsCountByTag($uid, $tid) {        $q = "SELECT count(friend_id) as cnt FROM (`rf_user_tagging`) WHERE (`user_id` =  $uid) AND  (`tags`  LIKE '%,$tid,%' OR  `tags`  LIKE '%,$tid%' OR  `tags`  LIKE '%$tid,%' OR  `tags`  LIKE '$tid')";        $temp = $this->db->query($q);        $t = $temp->row_array();        return $t['cnt'];    }    function appTags() {//get application tags        $this->db->select("tag_id,tag_name");        $this->db->from("rf_tags");        $temp = $this->db->get();        return $temp->result_array();    }    function db_select($select, $from, $where = array(), $group = array(), $order = '', $having = '', $limit = array(), $result_way = 'all', $echo = 0) {        $result = array();        $this->db->select($select);        $this->db->from($from);        if (!empty($where)) {            $this->db->where($where);        }        if (!empty($group)) {            $this->db->group_by($group);        }        if ($order != '') {            $this->db->order_by($order);        }        if (!empty($limit)) {                        $this->db->limit($limit[0], $limit[1]);//0 for limit1,1 for offset        }        $temp = $this->db->get();        switch ($result_way) {            case 'row':                $result = $temp->row();                break;            case 'row_array':                $result = $temp->row_array();                break;            case 'count':                $result = $temp->num_rows();                break;            default:                $result = $temp->result_array();                break;        }        if ($echo == 1) {            echo $this->db->last_query();            //exit;        }        return $result;        //echo "<pre>";print_r($a);exit;    }    function get_rmuids($sel, $tbl, $wh, $gp) {        $res = array();        $this->db->select($sel);        $this->db->from($tbl);        $this->db->where($wh);        $this->db->group_by($gp);        $temp = $this->db->get();        foreach ($temp->result() as $row) {            $res[] = $row->uid;        }        return $res;    }    function get_snooze_uids($rid) {        $res = array();        $this->db->select("user_id as uid");        $this->db->from("rf_reca_snooze");        $this->db->where("rc_mid", $rid);        $temp = $this->db->get();        foreach ($temp->result() as $row) {            $res[] = $row->uid;        }        return $res;    }    function is_email_avilable($email) {        $this->db->select("count(*) as cnt");        $this->db->from("dash_users");        $this->db->like("email", $email);        $this->db->limit(1);        $temp = $this->db->get();        return $temp->row();    }    function is_login_un_valid($user_name) {        $this->db->select("count(*) as cnt");        $this->db->from("dash_users");        $this->db->where("user_name !=", '');        $this->db->like("user_name", $user_name);        $this->db->limit(1);        $temp = $this->db->get();        return $temp->row();        //echo $this->db->last_query();     }    function is_login_cr_valid($email, $pass) {        $path = base_url() . "upload/profile_pic/";        $this->db->select("user_name,email,user_id,dob,sex,concat($path,profile_image),location");        $this->db->from("dash_users");        $this->db->where("password", md5($pass));        //$this->db->like("user_name",$un);        $this->db->like("email", $email);        //$this->db->where("password",md5($pass));        $this->db->limit(1);        $temp = $this->db->get();        //return $temp->row();        echo $this->db->last_query();    }    function search($p) {        $result = array();        $this->db->select($p['s']);        $this->db->from("tbl_businessuser");        if ($p['c'] > 0) {            $this->db->like('category_id', $p['c'], 'none');        }        if ($p['k'] != '') {            $this->db->or_like('keywords', $p['k']);        }        if ($p['localtionwise'] > 0) {            $this->db->order_by("distance", "asc");        }        $this->db->limit($p['limit']);        $temp = $this->db->get();        $result = $temp->result_array();        //echo $this->db->last_query();        return $result;    }    function getData($loadType, $loadId){                if ($loadType == "state") {            $fieldList = 'sid as id,state_name as name';            $table = 'tbl_state';            $fieldName = 'cid';            $orderByField = 'state_name';        } else {            $fieldList = 'city_id as id,city_name as name';            $table = 'tbl_city';            $fieldName = 'state_id';            $orderByField = 'city_name';        }        $this->db->select($fieldList);        $this->db->from($table);        $this->db->where($fieldName, $loadId);        $this->db->order_by($orderByField, 'asc');        $query = $this->db->get();        return $query;            }     public function statatics($select_date,$id)        {            $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname');            $this->db->from('push_notes a');             $this->db->join('tbl_customer b', 'b.user_id = a.user_id');            $this->db->join('tbl_deal c', 'c.id = a.join_id');            $this->db->join('tbl_shop d', 'd.shop_id = c.shop_id');            $this->db->join('tbl_category e', 'e.cid = d.shop_cats');            $this->db->where('d.shop_id',$id);            $this->db->where('a.date',$select_date);                   $query = $this->db->get();             if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }                public function statatics1($select_date,$end_date,$id)        {            $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname');            $this->db->from('push_notes a');             $this->db->join('tbl_customer b', 'b.user_id = a.user_id');            $this->db->join('tbl_deal c', 'c.id = a.join_id');            $this->db->join('tbl_shop d', 'd.shop_id = c.shop_id');            $this->db->join('tbl_category e', 'e.cid = d.shop_cats');            $this->db->where('a.date >=',$select_date);            $this->db->where('a.date <=',$end_date);            $this->db->where('d.shop_id',$id);            $query = $this->db->get();             if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function statatics2($id)        {            $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname');            $this->db->from('push_notes a');             $this->db->join('tbl_customer b', 'b.user_id = a.user_id');            $this->db->join('tbl_deal c', 'c.id = a.join_id');            $this->db->join('tbl_shop d', 'd.shop_id = c.shop_id');            $this->db->join('tbl_category e', 'e.cid = d.shop_cats');            $this->db->where('d.shop_id',$id);            $this->db->order_by('a.id', 'asc');            $query = $this->db->get();                         if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }		public function statatics3($id)        {            $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname');            $this->db->from('push_notes a');             $this->db->join('tbl_customer b', 'a.user_id = b.user_id');            $this->db->join('tbl_deal c', 'a.join_id = c.shop_id');            $this->db->join('tbl_shop d', 'd.shop_id = c.shop_id');            $this->db->join('tbl_category e', 'e.cid = d.shop_cats');            $this->db->where('c.id',$id);            $this->db->where('a.deal_id',$id);            $this->db->order_by('a.id', 'asc');            $query = $this->db->get();             //$str = $this->db->last_query();            //echo $str;             //exit;                        if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function statatics_pagi($select_date,$offset,$limit,$id)        {            $query = $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname')            ->from('push_notes a')            ->join('tbl_customer b', 'b.user_id = a.user_id')            ->join('tbl_deal c', 'c.id = a.join_id')            ->join('tbl_shop d', 'd.shop_id = c.shop_id')            ->join('tbl_category e', 'e.cid = d.shop_cats')            ->where('a.date',$select_date)                ->where('d.shop_id',$id)            ->limit($limit,$offset)            ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }                public function statatics1_pagi($select_date,$end_date,$offset,$limit,$id)        {            $query = $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname')            ->from('push_notes a')            ->join('tbl_customer b', 'b.user_id = a.user_id')            ->join('tbl_deal c', 'c.id = a.join_id')            ->join('tbl_shop d', 'd.shop_id = c.shop_id')            ->join('tbl_category e', 'e.cid = d.shop_cats')            ->where('a.date >=',$select_date)            ->where('a.date <=',$end_date)            ->where('d.shop_id',$id)            ->limit($limit,$offset)            ->get();             if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function statatics2_pagi($offset,$limit,$id)        {            $query = $this->db->select('a.push_text , a.id, a.date , b.name,c.deal_title,c.shop_id,d.shop_name,e.cname')            ->from('push_notes a')            ->join('tbl_customer b', 'b.user_id = a.user_id')            ->join('tbl_deal c', 'c.id = a.join_id')            ->join('tbl_shop d', 'd.shop_id = c.shop_id')            ->join('tbl_category e', 'e.cid = d.shop_cats')            ->where('d.shop_id',$id)            ->limit($limit,$offset)            ->get();                         if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_category_wise($arr){                $query = $this->db->select('*')                ->from('tbl_shop')                ->like('shop_cats', $arr, 'both')                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_city_wise($city_id){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('city_id', $city_id)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_state_wise($state_id){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('state_id', $state_id)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_country_wise($country_id){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('country_id', $country_id)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function category_city($cat,$city_id){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('city_id', $city_id)                ->like('shop_cats', $cat, 'both')                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function category_state($cat,$state_id){            $query = $this->db->select('*')                ->from('tbl_shop')               ->where('state_id', $state_id)                ->like('shop_cats', $cat, 'both')                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function category_country($cat,$country_id){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('country_id', $country_id)                ->like('shop_cats', $cat, 'both')                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_all_shop(){            $query = $this->db->select('*')                ->from('tbl_shop')                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_category_wise_pagi($arr,$offset,$limit){                $query = $this->db->select('*')                ->from('tbl_shop')                ->like('shop_cats', $arr, 'both')                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_city_wise_pagi($city_id,$offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('city_id', $city_id)                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_state_wise_pagi($state_id,$offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('state_id', $state_id)                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_country_wise_pagi($country_id,$offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('country_id', $country_id)                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function category_city_pagi($cat,$city_id,$offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('city_id', $city_id)                ->like('shop_cats', $cat, 'both')                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function category_state_pagi($cat,$state_id,$offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')               ->where('state_id', $state_id)                ->like('shop_cats', $cat, 'both')                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function category_country_pagi($cat,$country_id,$offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')                ->where('country_id', $country_id)                ->like('shop_cats', $cat, 'both')                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        public function select_all_shop_pagi($offset,$limit){            $query = $this->db->select('*')                ->from('tbl_shop')                ->limit($limit,$offset)                ->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }                public function view_shop_detail($id){                         if($this->check_state($id) > 0){                $this->db->join('tbl_state', 'tbl_state.sid = tbl_shop.state_id');                    if($this->check_city($id) > 0){                        $this->db->join('tbl_city', 'tbl_city.city_id = tbl_shop.city_id');                        $this->db->join('tbl_state', 'tbl_state.sid = tbl_shop.state_id');                    }            }            $this->db->select('*');            $this->db->from('tbl_shop');             $this->db->join('tbl_category', 'tbl_category.cid = tbl_shop.shop_cats');            $this->db->join('tbl_country', 'tbl_country.id = tbl_shop.country_id');            $this->db->where('tbl_shop.shop_id',$id);            $query = $this->db->get();            if($query->num_rows() != 0)            {                return $query->result_array();            }            else            {                return false;            }        }        function check_city($id){            $this->db->select('tbl_shop.city_id');            $this->db->from('tbl_shop');            $this->db->where('shop_id', $id);            $query = $this->db->get();            $result = $query->result_array();            return ($result[0]['city_id']);        }        function check_state($id){            $this->db->select('tbl_shop.state_id');            $this->db->from('tbl_shop');            $this->db->where('shop_id', $id);            $query = $this->db->get();            $result = $query->result_array();            return ($result[0]['state_id']);        }        function getCountryId($country){            $sql = "SELECT id FROM tbl_country WHERE name=? or title=?";             $query = $this->db->query($sql, array($country, $country));            $result = $query->result_array();            return ($result[0]['id']);        }        function getStateId($state, $country_id){            $sql = "SELECT sid FROM tbl_state WHERE cid=? and (state_name=? or code=?)";             $query = $this->db->query($sql, array($country_id, $state, $state));            //echo $this->db->last_query()."<br>";            $result = $query->result_array();            return ($result[0]['sid']);        }        function getCityId($country_id, $state_id, $city){            $sql = "SELECT city_id FROM tbl_city WHERE cid=? and state_id=? and city_name=?";             $query = $this->db->query($sql, array($country_id, $state_id, $city));            //echo $this->db->last_query();            if ($query->num_rows() ==0) {                // add city                $sqli = "insert into tbl_city set cid=?, state_id = ?, city_name=?, is_active=0";                $result1 = $this->db->query($sqli, array($country_id, $state_id, $city));                return $this->db->insert_id();            } else {                $result = $query->result_array();                return ($result[0]['city_id']);            }                    }        function getUser($user_id) {            $query = $this->db->get_where('tbl_users', array('user_id' => $user_id));            return $query->row();         }}?>